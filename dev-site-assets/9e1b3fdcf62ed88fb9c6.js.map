{"version":3,"file":"dev-site-assets/9e1b3fdcf62ed88fb9c6.js","mappings":"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","sources":["webpack://search-iframe/./src/@adobe/gatsby-theme-aio/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '@adobe/gatsby-theme-aio/src/components/AnchorLink';\nimport { Item as MenuItem, Menu } from '@adobe/gatsby-theme-aio/src/components/Menu';\nimport { Popover } from '@adobe/gatsby-theme-aio/src/components/Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '@adobe/gatsby-theme-aio/src/utils';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '@adobe/gatsby-theme-aio/src/components/ActionButton';\nimport { Close, Magnify } from '@adobe/gatsby-theme-aio/src/components/Icons';\nimport { Checkbox } from '@adobe/gatsby-theme-aio/src/components/Checkbox';\nimport { ProgressCircle } from '@adobe/gatsby-theme-aio/src/components/ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n    html\n        .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n        .replace(/&#60;mark&#62;/g, '<mark>')\n        .replace(/&#60;em&#62;/g, '<em>')\n        .replace(/&#60;\\/mark&#62;/g, '</mark>')\n        .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n    const params = new URLSearchParams(window.location.search);\n    params.set(name, value);\n    window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n    window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst getIndexesFromProduct = (localProduct, indexAll) => {\n    const product = indexAll.filter(product => product.productName === localProduct);\n    const indices = product.map((({ productIndices }) => productIndices)).flat().map(({ indexName }) => indexName);\n    return indices;\n};\n\nconst searchSuggestions = async (algolia, query, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n    const queries = [];\n    let indexes;\n    if (!existingIndices.length) {\n        const algoliaIndices = await algolia.listIndices();\n        const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n        // extract sub array of indices from each product and flatten/merge into single array of indices\n        const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n        const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n        setExistingIndices(filteredIndexes);\n        indexes = filteredIndexes;\n    } else {\n        indexes = existingIndices;\n    }\n\n    // By default use all indexes\n    if (searchIndex[0] === SEARCH_INDEX_ALL) {\n        searchIndex = indexes;\n    }\n    // Or prioritize searchIndex\n    else {\n        const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n        const localProductIndexes = getIndexesFromProduct(searchProductNames[0], indexAll);\n        searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n    }\n\n    searchIndex.forEach((indexName) => {\n        queries.push({\n            indexName,\n            query,\n            params: {\n                hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n                attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n            }\n        });\n    });\n\n    return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n    let indexes;\n    if (!existingIndices.length) {\n        const algoliaIndices = await algolia.listIndices();\n        const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n        // extract sub array of indices from each product and flatten/merge into single array of indices\n        const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n        const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n        setExistingIndices(filteredIndexes);\n        indexes = filteredIndexes;\n    } else {\n        indexes = existingIndices;\n    }\n\n    if (selectedIndex.includes('all')) {\n        selectedIndex = indexes;\n    } else {\n        selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n    }\n\n    const queries = [];\n\n    selectedIndex.forEach((indexName) => {\n        queries.push({\n            indexName,\n            query,\n            params: {\n                facets: [SEARCH_KEYWORDS],\n                attributesToRetrieve: ['objectID', 'url', 'product'],\n                hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n                filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n            }\n        });\n    });\n\n    return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n    hits.forEach(({ objectID, url, path, _highlightResult }) => {\n        let urlPath = ''\n        if (path) {\n            // console.log(path);\n            urlPath = path;\n        } else {\n            // console.log(url);\n            if (url.includes('https://developer.adobe.com')) {\n                urlPath = url.replace('https://developer.adobe.com', '');\n            } else {\n                urlPath = url;\n            }\n        }\n\n        // TODO corrupted record url check\n        if (!isExternalLink(urlPath)) {\n            // Verify url is unique\n            if (!results.find((result) => result.url === urlPath)) {\n                results.push({\n                    objectID,\n                    url: urlPath,\n                    _highlightResult\n                });\n            }\n        }\n    });\n};\n\nconst mapKeywordResults = (facets, results) => {\n    if (facets[SEARCH_KEYWORDS]) {\n        Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n            const found = results.find((result) => Object.keys(result)[0] === keyword);\n            if (found) {\n                // Increase keyword count\n                found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n            } else {\n                results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n            }\n        });\n    }\n};\n\nconst setTargetOrigin = () => {\n    const parentURL = document.referrer;\n\n    if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n        return parentURL;\n    } else {\n        return false;\n    }\n};\n\nconst Search = ({ algolia, indexAll, indexPrefix, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [oldSearchQuery, setOldSearchQuery] = useState('')\n    const [selectedIndex, setSelectedIndex] = useState(['all']);\n    const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n    const [existingIndices, setExistingIndices] = useState([]);\n    const [selectedKeywords, setSelectedKeywords] = useState([]);\n    const [showSearchResults, setShowSearchResults] = useState(false);\n    const [isFocused, setIsFocused] = useState(false);\n    const [showClear, setShowClear] = useState(false);\n    const searchRef = useRef(null);\n    const suggestionsRef = useRef(null);\n    const inputRef = useRef(null);\n    const searchResultsRef = useRef(null);\n    const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [productResults, setProductResults] = useState([]);\n    const [keywordResults, setKeywordResults] = useState([]);\n    const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n    const [triggerSearch, setTriggerSearch] = useState(false);\n    const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n    const search = async () => {\n        if (searchQuery.length) {\n            let search;\n            setIsSuggestionsOpen(false);\n            setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n            setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n            setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n            const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n            const targetOrigin = setTargetOrigin();\n            if (targetOrigin) {\n                window.parent.postMessage(message, targetOrigin);\n            }\n\n            setShowSearchResults(true);\n\n            if (searchQuery !== oldSearchQuery) {\n                setIsLoading(true);\n                search = await searchIndexes(algolia, searchQuery, indexPrefix, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n            } else {\n                search = await searchIndexes(algolia, searchQuery, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n            }\n\n            const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n            const mappedProductResults = [SEARCH_INDEX_ALL];\n            const mappedSearchResults = [];\n            const mappedKeywordResults = [];\n\n            if (search?.results?.length) {\n                search.results.forEach(({ hits, facets }) => {\n                    if (facets === undefined) return;\n                    if (hits.length > 0) {\n                        const product = hits[0].product;\n\n                        if (product) {\n                            if (!mappedProductResults.includes(product)) {\n                                if (product !== localProduct) {\n                                    mappedProductResults.push(product);\n                                } else {\n                                    mappedProductResults.splice(1, 0, localProduct);\n                                }\n                            }\n                        }\n                    }\n\n                    mapSearchResults(hits, mappedSearchResults);\n                    mapKeywordResults(facets, mappedKeywordResults);\n\n                    return true;\n                });\n            }\n            if (searchQuery !== oldSearchQuery) {\n                setProductResults(mappedProductResults);\n                setOldSearchQuery(searchQuery);\n                if (localProduct && mappedProductResults.includes(localProduct)) {\n                    setSelectedIndex(getIndexesFromProduct(localProduct, indexAll));\n                    setTriggerSearch(true);\n                } else {\n                    setSearchResults(mappedSearchResults);\n                    setKeywordResults(mappedKeywordResults);\n                    setIsLoading(false);\n                }\n            } else {\n                setSearchResults(mappedSearchResults);\n                setKeywordResults(mappedKeywordResults);\n                setIsLoading(false);\n            }\n        }\n    };\n\n    useEffect(async () => {\n        window.addEventListener(\"message\", (e) => {\n            const message = JSON.parse(e.data);\n            if (message.localPathName) {\n                let localPathName = message.localPathName;\n                if (localPathName !== \"/\") {\n                    // make sure path name has a slash at start/end to match path-prefix format \n                    if (!localPathName.startsWith('/')) { localPathName = `/${localPathName}` }\n                    if (!localPathName.endsWith('/')) { localPathName = `${localPathName}/` }\n                    const localProduct = indexAll.find(product => product.productIndices.some(idx => {\n                        return localPathName.startsWith(idx.indexPathPrefix);\n                    }));\n\n                    if (localProduct?.productName) {\n                        setSearchIndex([localProduct.productName, ...searchIndex]);\n                    }\n                }\n\n                const reply = JSON.stringify({ received: message.localPathName });\n                window.parent.postMessage(reply, \"*\");\n            }\n        });\n\n        /* Prepare list of existing indices by cross referencing Algolia */\n\n        const algoliaIndices = await algolia.listIndices();\n        const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n        // extract sub array of indices from each product and flatten/merge into single array of indices\n        const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => {\n            return indexPrefix ? `${indexPrefix}-${indexName}` : indexName\n        });\n\n        const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n        setExistingIndices(filteredIndexes);\n\n    }, [])\n\n    useEffect(() => {\n        if (showSearch) {\n            // Read search params\n            const searchParams = new URL(window.location).searchParams;\n            const query = searchParams.get(SEARCH_PARAMS.query);\n            const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n            const index = searchParams.get(SEARCH_PARAMS.index);\n\n            if (index) {\n                setSelectedIndex(index.split(','));\n            }\n\n            if (keywords) {\n                setSelectedKeywords(keywords.split(','));\n            }\n\n            if (query?.length) {\n                setSearchQuery(query);\n                setShowClear(true);\n\n                setTriggerSearch(true);\n            }\n\n            // Autofocus\n            if (inputRef?.current) {\n                inputRef.current.focus();\n            }\n        } else {\n            clearQueryStringParameters();\n        }\n    }, [showSearch]);\n\n    useEffect(() => {\n        if (triggerSearch) {\n            setTriggerSearch(false);\n            search();\n        }\n    }, [triggerSearch]);\n\n    useEffect(() => {\n        if (searchResultsRef?.current) {\n            searchResultsRef.current.scrollTop = 0;\n        }\n    }, [searchResults]);\n\n    useEffect(() => {\n        const onClick = ({ target }) => {\n            setIsSuggestionsOpen(false);\n\n            if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n                setShowSearch(false);\n            }\n        };\n\n        document.addEventListener('click', onClick, true);\n        return () => {\n            document.removeEventListener('click', onClick, true);\n        };\n    }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n    useEffect(() => {\n        const onEscape = ({ key }) => {\n            if (key === 'Escape') {\n                setShowSearch(false);\n                clearQueryStringParameters();\n                const searchClose = document.getElementById(\"aio-Search-close\");\n                if (searchClose) searchClose.focus();\n            }\n        };\n\n        document.addEventListener('keydown', onEscape);\n        return () => {\n            document.removeEventListener('keydown', onEscape);\n        };\n    }, [setShowSearch]);\n\n    useEffect(() => {\n        // simple debouncing strategy for search queries while user is typing\n        const timeOutId = setTimeout(() => debounceCallback(), 500);\n        const debounceCallback = async () => {\n            if (searchQuery.length && !searchResults.length) {\n                setShowClear(true);\n\n                const suggestions = await searchSuggestions(algolia, searchQuery, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices);\n                setSearchQueryCounter(searchQueryCounter + 1);\n                console.log('Total search queries counted is:', searchQueryCounter);\n\n                if (suggestions?.results?.length) {\n                    const results = [];\n                    suggestions.results.forEach(({ hits }) => {\n                        mapSearchResults(hits, results);\n                    });\n                    setSearchSuggestionResults(results);\n\n                    if (!searchResults.length) {\n                        setShowSearchResults(false);\n                    }\n                } else {\n                    setSearchSuggestionResults([]);\n                }\n\n                setIsSuggestionsOpen(true);\n            } else {\n                setShowClear(false);\n                setIsSuggestionsOpen(false);\n            }\n        }\n\n        return () => clearTimeout(timeOutId);\n\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (suggestionsRef) {\n            if (searchSuggestionResults.length > 0) {\n                const allLinks = suggestionsRef.current.querySelectorAll(\"a\");\n                if (allLinks.length > 0) {\n                    allLinks.forEach(link => {\n                        link.target = \"_top\";\n                    });\n                }\n            }\n        }\n\n        if (searchResultsRef) {\n            if (searchResults.length > 0) {\n                const allLinks = searchResultsRef.current.querySelectorAll(\"a\");\n                if (allLinks.length > 0) {\n                    allLinks.forEach(link => {\n                        link.target = \"_top\";\n                    });\n                }\n            }\n        }\n    }, [searchSuggestionResults, searchResults])\n\n    return (\n        <>\n            <div\n                ref={searchRef}\n                css={css`\n           position: fixed;\n           top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n           left: 0;\n           right: 0;\n           ${showSearchResults && 'bottom: 0;'}\n           background-color: var(--spectrum-global-color-static-white);\n           z-index: 10;\n \n           @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n             top: var(--spectrum-global-dimension-size-1200);\n           }\n         `}>\n                <div\n                    css={css`\n             position: relative;\n             margin: var(--spectrum-global-dimension-size-400) auto;\n             max-width: ${SEARCH_INPUT_WIDTH};\n \n             @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n               max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n             }\n           `}>\n                    <form\n                        css={css`\n               width: 100%;\n             `}\n                        className=\"spectrum-Search\"\n                        onSubmit={async (event) => {\n                            event.preventDefault();\n                            setSelectedKeywords([]);\n                            setShowClear(true);\n                            setTriggerSearch(true);\n                        }}>\n                        <div\n                            className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n                            css={css`\n                 min-width: auto;\n                 width: 100%;\n               `}>\n                            <Magnify className=\"spectrum-Textfield-icon\" />\n                            <input\n                                ref={inputRef}\n                                value={searchQuery}\n                                onFocus={() => {\n                                    setIsFocused(true);\n                                }}\n                                onBlur={() => {\n                                    setIsFocused(false);\n                                }}\n                                onKeyDown={({ key }) => {\n                                    if (suggestionsRef?.current) {\n                                        if (key === 'ArrowDown') {\n                                            suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                                        } else if (key === 'ArrowUp') {\n                                            suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                                        }\n                                    }\n                                }}\n                                onChange={async (e) => {\n                                    const query = e.target.value;\n                                    setSearchQuery(query);\n                                }}\n                                aria-label=\"Search\"\n                                type=\"search\"\n                                placeholder=\"Search\"\n                                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                        {showClear && (\n                            <ActionButton\n                                css={css`\n                   position: absolute;\n                   \n                   margin-right: var(--spectrum-global-dimension-size-100);\n                   margin-bottom: var(--spectrum-global-dimension-size-40);\n \n                   @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                     margin-right: 0;\n                   }\n                   &:focus{\n                     border: 2px solid #007aff !important;\n                     border-radius: 15% !important;\n                   }\n                 `}\n                                tabIndex=\"0\"\n                                isQuiet\n                                aria-label=\"Clear Search\"\n                                type=\"reset\"\n                                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                                onClick={() => {\n                                    setSearchQuery('');\n                                    setSearchResults([]);\n                                    setShowSearchResults(false);\n                                    clearQueryStringParameters();\n                                    inputRef.current.focus();\n                                }}>\n                                <Close />\n                            </ActionButton>\n                        )}\n                    </form>\n\n                    <Popover\n                        isOpen={isSuggestionsOpen}\n                        css={css`\n               position: absolute;\n               top: var(--spectrum-global-dimension-size-400);\n               width: ${SEARCH_INPUT_WIDTH};\n \n               @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                 max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n               }\n             `}>\n                        {searchSuggestionResults.length > 0 ? (\n                            <Menu\n                                ref={suggestionsRef}\n                                onKeyDown={({ key }) => {\n                                    if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                                        if (key === 'ArrowDown') {\n                                            const nextSibling = document.activeElement.nextElementSibling;\n                                            if (nextSibling) {\n                                                nextSibling.focus();\n                                            } else {\n                                                suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                                            }\n                                        } else if (key === 'ArrowUp') {\n                                            const previousSibling = document.activeElement.previousElementSibling;\n                                            if (previousSibling) {\n                                                previousSibling.focus();\n                                            } else {\n                                                suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                                            }\n                                        }\n                                    }\n                                }}>\n                                {searchSuggestionResults.map((searchSuggestion) => {\n                                    const to = `${window.location.origin}${searchSuggestion.url}`;\n                                    const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                                    const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n                                        return optn[1].matchedWords.length > 0\n                                    });\n                                    let content = \"\";\n                                    if (descriptions.length > 1) {\n                                        descriptions.sort((a, b) => {\n                                            return a[1].value.length > b[1].value.length ? -1 : 1;\n                                        });\n                                        content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                                    } else {\n                                        content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                                    }\n\n                                    content = content.substring(0, 250);\n\n                                    return (\n                                        <MenuItem key={searchSuggestion.objectID} href={to}>\n                                            <div\n                                                css={css`\n                           mark,\n                           em {\n                             background-color: transparent;\n                             color: inherit;\n                             font-weight: inherit;\n                             font-style: inherit;\n                             text-decoration: underline;\n                           }\n                         `}>\n                                                <strong\n                                                    dangerouslySetInnerHTML={{\n                                                        __html: encodeHTML(title)\n                                                    }}\n                                                />\n\n                                                <div\n                                                    css={css`\n                             font-style: italic;\n                             margin: var(--spectrum-global-dimension-size-50) 0;\n                           `}>\n                                                    {to}\n                                                </div>\n\n                                                <div\n                                                    dangerouslySetInnerHTML={{\n                                                        __html: encodeHTML(content)\n                                                    }}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Menu>\n                        ) : (\n                            <div\n                                css={css`\n                   margin-top: var(--spectrum-global-dimension-size-800);\n                   margin-bottom: var(--spectrum-global-dimension-size-800);\n                 `}>\n                                <div\n                                    css={css`\n                     display: flex;\n                     flex-direction: column;\n                     align-items: center;\n                     justify-content: center;\n                   `}>\n                                    <h4\n                                        className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                                        css={css`\n                       margin-bottom: var(--spectrum-global-dimension-size-100);\n                     `}>\n                                        No Results Found\n                                    </h4>\n                                    <em>Try another search term</em>\n                                </div>\n                            </div>\n                        )}\n                    </Popover>\n                </div>\n\n                {isLoading && (<div\n                    css={css`\n                 width:100%;\n                 height:100%;\n                 display: grid;\n                 place-items: start center;\n               `}>\n                    <ProgressCircle size=\"L\" />\n                </div>)}\n\n                {showSearchResults && !isLoading && (\n                    <div\n                        css={css`\n               display: flex;\n               max-width: ${DESKTOP_SCREEN_WIDTH};\n               margin: auto;\n               height: 100%;\n \n               @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                 overflow: auto;\n                 flex-wrap: wrap;\n               }\n             `}>\n                        <div\n                            css={css`\n                 display: flex;\n                 align-items: flex-start;\n                 flex-direction: column;\n                 box-sizing: border-box;\n                 padding: var(--spectrum-global-dimension-size-200);\n                 width: ${SIDENAV_WIDTH};\n               `}>\n                            <h4\n                                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                                css={css`\n                   margin-bottom: var(--spectrum-global-dimension-size-100);\n                 `}>\n                                Filter by Products\n                            </h4>\n                            <div\n                                css={css`\n                     display: flex;\n                     flex-direction: column;\n                     overflow-y: auto;\n                     overflow-x: hidden;\n                     max-height: 30%;\n                     width: ${SIDENAV_WIDTH};\n                     @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                       margin-bottom: 0;\n                     }\n                   `}>\n                                {productResults.map((productName, i) => {\n                                    return (\n                                        <Checkbox\n                                            key={i}\n                                            isSelected={productName === SEARCH_INDEX_ALL ?\n                                                selectedIndex.includes('all') :\n                                                selectedIndex.some(index => {\n                                                    return getIndexesFromProduct(productName, indexAll).includes(index);\n                                                })\n                                            }\n                                            value={productName}\n                                            onChange={(checked) => {\n                                                if (!checked) {\n                                                    if (productName === 'All Products') {\n                                                        setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                                                    } else {\n                                                        setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName, indexAll).includes(index)));\n                                                    }\n                                                } else {\n                                                    if (productName === 'All Products') {\n                                                        setSelectedIndex(['all']);\n                                                    } else {\n                                                        setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName, indexAll)]);\n                                                    }\n                                                }\n                                                setSelectedKeywords([]);\n                                                setTriggerSearch(true);\n                                            }}>\n                                            <span>{productName}</span>\n                                        </Checkbox>\n                                    );\n                                })}\n                            </div>\n                            <h4\n                                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                                css={css`\n                   margin-top: var(--spectrum-global-dimension-size-200);\n                   margin-bottom: var(--spectrum-global-dimension-size-100);\n                 `}>\n                                Filter by Keywords\n                            </h4>\n                            <div\n                                css={css`\n                     margin-bottom: var(--spectrum-global-dimension-size-100);\n                     display: flex;\n                     flex-direction: column;\n                     overflow-y: auto;\n                     overflow-x: hidden;\n                     max-height: 50%;\n                     width: ${SIDENAV_WIDTH};\n                     @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                       margin-bottom: 0;\n                     }\n                   `}>\n                                {keywordResults.length > 0 ?\n                                    (keywordResults.map((keywordResult, i) => {\n                                        const keyword = Object.keys(keywordResult)[0];\n\n                                        return (\n                                            <Checkbox\n                                                key={i}\n                                                isSelected={selectedKeywords.includes(keyword)}\n                                                value={keyword}\n                                                onChange={(checked) => {\n                                                    if (checked) {\n                                                        setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                                                    } else {\n                                                        setSelectedKeywords(\n                                                            selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                                                        );\n                                                    }\n                                                    setTriggerSearch(true);\n                                                }}>\n                                                <span\n                                                    css={css`\n                         white-space: nowrap;\n                         text-overflow: ellipsis;\n                         `}>{keyword}</span>\n                                                {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                                                {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                                            </Checkbox>\n                                        );\n                                    }))\n                                    :\n                                    (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n                            </div>\n                        </div>\n                        <div\n                            css={css`\n                 height: 100%;\n               `}>\n                            {searchResults.length > 0 ? (\n                                <div\n                                    ref={searchResultsRef}\n                                    css={css`\n                     height: calc(\n                       100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                         var(--spectrum-global-dimension-size-200)\n                     );\n                     overflow: auto;\n \n                     @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                       height: auto;\n                       overflow: inherit;\n                     }\n                   `}>\n                                    {searchResults.map((searchResult) => {\n                                        const to = `${window.location.origin}${searchResult.url}`;\n                                        const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                                        const descriptions = Object.entries(searchResult._highlightResult).filter(optn => optn[1].matchedWords.length > 0);\n                                        let content = \"\";\n                                        if (descriptions.length > 1) {\n                                            descriptions.sort((a, b) => {\n                                                return a[1].value.length > b[1].value.length ? -1 : 1;\n                                            });\n                                            content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                                        } else {\n                                            content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                                        }\n\n                                        content = content.substring(0, 250);\n\n                                        return (\n                                            <div\n                                                css={css`\n                           margin: var(--spectrum-global-dimension-size-300);\n \n                           mark,\n                           em {\n                             background-color: transparent;\n                             color: inherit;\n                             font-weight: 700;\n                             font-style: inherit;\n                           }\n                         `}>\n                                                <div\n                                                    className=\"spectrum-Body spectrum-Body--sizeM\"\n                                                    css={css`\n                             margin-bottom: var(--spectrum-global-dimension-size-100);\n                           `}>\n                                                    <AnchorLink to={to}>\n                                                        <span\n                                                            dangerouslySetInnerHTML={{\n                                                                __html: encodeHTML(title)\n                                                            }}\n                                                        />\n                                                    </AnchorLink>\n                                                </div>\n                                                <div\n                                                    css={css`\n                             font-style: italic;\n                           `}>\n                                                    <AnchorLink variant=\"secondary\" to={to}>\n                                                        {to}\n                                                    </AnchorLink>\n                                                </div>\n                                                <div\n                                                    className=\"spectrum-Body spectrum-Body--sizeS\"\n                                                    css={css`\n                             margin: var(--spectrum-global-dimension-size-100) 0;\n                           `}\n                                                    dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                                                />\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : (\n                                <div\n                                    css={css`\n                     position: absolute;\n                     top: var(--spectrum-global-dimension-size-3600);\n                     height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                     margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                     text-align: center;\n                     right: 0;\n                     left: 0;\n                     padding: 0 var(--spectrum-global-dimension-size-200);\n \n                     @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                       position: static;\n                       margin: var(--spectrum-global-dimension-size-800) 0;\n                       height: auto;\n                     }\n                   `}>\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 104 90\"\n                                        css={css`\n                       width: var(--spectrum-global-dimension-size-2400);\n                       height: var(--spectrum-global-dimension-size-1200);\n                       margin-bottom: var(--spectrum-global-dimension-size-300);\n                       fill: var(--spectrum-global-color-static-gray-500);\n                     `}>\n                                        <g>\n                                            <g>\n                                                <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                                                <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                                                <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                                                <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                                            </g>\n                                        </g>\n                                    </svg>\n                                    <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                                        Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                                    </h3>\n                                    <p\n                                        className=\"spectrum-Body spectrum-Body--S\"\n                                        css={css`\n                       margin-top: var(--spectrum-global-dimension-size-100);\n                     `}>\n                                        Make sure all the words are spelled correctly or try to refine your keywords.\n                                    </p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {\n                !showSearchResults && (\n                    <div\n                        css={css`\n             position: fixed;\n             z-index: 1;\n             top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n             bottom: 0;\n             left: 0;\n             right: 0;\n             background-color: rgba(0, 0, 0, 0.4);\n             pointer-events: none;\n           `}\n                    />\n                )\n            }\n        </>\n    );\n};\n\nSearch.propTypes = {\n    algolia: PropTypes.object,\n    searchIndex: PropTypes.array,\n    indexAll: PropTypes.array,\n    showSearch: PropTypes.bool,\n    setShowSearch: PropTypes.func,\n    searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","getIndexesFromProduct","localProduct","indexAll","filter","product","productName","map","productIndices","flat","indexName","searchSuggestions","algolia","query","indexPrefix","searchIndex","existingIndices","setExistingIndices","queries","length","listIndices","algoliaIndices","algoliaIndexNames","Object","values","items","localIndexList","prod","filteredIndexes","localIndex","includes","indexes","searchProductNames","localProductIndexes","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","selected","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","path","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","isLoading","setIsLoading","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","indexOf","parent","postMessage","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","useEffect","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","reply","received","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","removeEventListener","onEscape","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","suggestions","console","log","clearTimeout","allLinks","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","title","descriptions","entries","optn","matchedWords","content","sort","a","b","substring","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","isSelected","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}