{"version":3,"file":"dev-site-assets/3d36ebf1b0e7caf025b5.js","mappings":"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","sources":["webpack://search-iframe/./src/@adobe/gatsby-theme-aio/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '@adobe/gatsby-theme-aio/src/components/AnchorLink';\nimport { Item as MenuItem, Menu } from '@adobe/gatsby-theme-aio/src/components/Menu';\nimport { Popover } from '@adobe/gatsby-theme-aio/src/components/Popover';\nimport PropTypes from 'prop-types';\nimport {\n  MOBILE_SCREEN_WIDTH,\n  DESKTOP_SCREEN_WIDTH,\n  SIDENAV_WIDTH,\n  SEARCH_PARAMS,\n  isExternalLink,\n} from '@adobe/gatsby-theme-aio/src/utils';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '@adobe/gatsby-theme-aio/src/components/ActionButton';\nimport { Close, Magnify } from '@adobe/gatsby-theme-aio/src/components/Icons';\nimport { Checkbox } from '@adobe/gatsby-theme-aio/src/components/Checkbox';\nimport { ProgressCircle } from '@adobe/gatsby-theme-aio/src/components/ProgressCircle';\nimport { Picker, PickerButton } from '@adobe/gatsby-theme-aio/src/components/Picker';\nimport AlertDialog from '@adobe/gatsby-theme-aio/src/components/AlertDialog';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = html =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, i => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst getIndexesFromProduct = (localProduct, indexAll) => {\n  const product = indexAll.filter(product => product.productName === localProduct);\n  const indices = product\n    .map(({ productIndices }) => productIndices)\n    .flat()\n    .map(({ indexName }) => indexName);\n  return indices;\n};\n\nconst searchSuggestions = async (\n  algolia,\n  query,\n  indexPrefix,\n  searchIndex,\n  indexAll,\n  existingIndices,\n  setExistingIndices\n) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter(product => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0], indexAll);\n    searchIndex = [\n      ...localProductIndexes,\n      ...indexes.filter(index => !searchProductNames.includes(index)),\n    ].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach(indexName => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['*'],\n      },\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (\n  algolia,\n  query,\n  indexPrefix,\n  selectedIndex,\n  indexAll,\n  existingIndices,\n  setExistingIndices,\n  keywords\n) => {\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach(indexName => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['*'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map(keyword => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND '),\n      },\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, product, description, title, _highlightResult, fragment }) => {    \n    let urlPath = '';\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find(result => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          product,\n          description,\n          title,\n          fragment,\n          _highlightResult,\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach(keyword => {\n      const found = results.find(result => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (\n    parentURL.indexOf('localhost') >= 0 ||\n    parentURL.indexOf('developer-stage.adobe') >= 0 ||\n    parentURL.indexOf('hlx.page') >= 0 ||\n    parentURL.indexOf('hlx.live') >= 0 ||\n    parentURL.indexOf('developer.adobe') >= 0\n  ) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({\n  algolia,\n  indexAll,\n  indexPrefix,\n  showSearch,\n  setShowSearch,\n  searchButtonId,\n  isIFramed,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n  const [openProductPicker, setOpenProductPicker] = useState(false);\n  const [openKeywordPicker, setOpenKeywordPicker] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n\n  let skipSuggestions = showSearch ? true : false;\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      const message = JSON.stringify({\n        query: searchQuery,\n        keywords: selectedKeywords,\n        index: selectedIndex,\n      });\n      const targetOrigin = setTargetOrigin();\n      if (targetOrigin) {\n        window.parent.postMessage(message, targetOrigin);\n      }\n      setIsSuggestionsOpen(false);\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(\n          algolia,\n          searchQuery,\n          indexPrefix,\n          ['all'],\n          indexAll,\n          existingIndices,\n          setExistingIndices,\n          selectedKeywords\n        );\n      } else {\n        search = await searchIndexes(\n          algolia,\n          searchQuery,\n          indexPrefix,\n          selectedIndex,\n          indexAll,\n          existingIndices,\n          setExistingIndices,\n          selectedKeywords\n        );\n      }\n\n      const localProduct = searchIndex.filter(product => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          // if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n          console.log(\"search hits\", hits);\n\n          mapSearchResults(hits, mappedSearchResults);\n          // mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct, indexAll));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        console.log(mappedSearchResults);\n        \n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    window.addEventListener('message', e => {\n      try {\n        if (e.data.message) {\n          const message = JSON.parse(e.data);\n          if (message.localPathName) {\n            let localPathName = message.localPathName;\n            if (localPathName !== '/') {\n              // make sure path name has a slash at start/end to match path-prefix format\n              if (!localPathName.startsWith('/')) {\n                localPathName = `/${localPathName}`;\n              }\n              if (!localPathName.endsWith('/')) {\n                localPathName = `${localPathName}/`;\n              }\n              const localProduct = indexAll.find(product =>\n                product.productIndices.some(idx => {\n                  return localPathName.startsWith(idx.indexPathPrefix);\n                })\n              );\n\n              if (localProduct?.productName) {\n                setSearchIndex([localProduct.productName, ...searchIndex]);\n              }\n            }\n\n            const reply = JSON.stringify({ received: message.localPathName });\n            window.parent.postMessage(reply, '*');\n          }\n        }\n      } catch (e) {\n        console.log('Unable to retrieve search messgage:');\n        console.log(e);\n      }\n    });\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth <= parseInt(MOBILE_SCREEN_WIDTH)) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= parseInt(MOBILE_SCREEN_WIDTH)) {\n        setMobileView(true);\n      } else {\n        setMobileView(false);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (\n        searchRef.current &&\n        !searchRef.current.contains(target) &&\n        target.id !== searchButtonId\n      ) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setSearchQuery('');\n        setSearchResults([]);\n        clearQueryStringParameters();\n        setShowSearchResults(false);\n        setIsSuggestionsOpen(false);\n        setShowSearch(false);\n        setIsLoading(false);\n        skipSuggestions = false;\n        const searchClose = document.getElementById('aio-Search-close');\n        if (searchClose) searchClose.focus();\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, []);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n\n      if (!skipSuggestions) {\n        if (searchQuery.length && !searchResults.length) {\n          setShowClear(true);\n          setIsLoading(true);\n          setIsSuggestionsOpen(true);\n          const suggestions = await searchSuggestions(\n            algolia,\n            searchQuery,\n            indexPrefix,\n            searchIndex,\n            indexAll,\n            existingIndices,\n            setExistingIndices\n          );\n          setSearchQueryCounter(searchQueryCounter + 1);\n          console.log('Total search queries counted is:', searchQueryCounter);\n\n          if (suggestions?.results?.length) {\n            const results = [];\n            suggestions.results.forEach(({ hits }) => {\n              console.log(\"suggestion hits\", hits);\n              mapSearchResults(hits, results);\n            });\n            const filteredResults = results.map((searchSuggestion, index, results) => {\n              const to = `${window.location.origin}${searchSuggestion.url}${searchSuggestion.fragment || ''}`;\n              const title = searchSuggestion._highlightResult.title?.value\n                ? searchSuggestion._highlightResult.title.value\n                : '';\n              const descriptions = Object.entries(searchSuggestion._highlightResult).filter(\n                optn => {\n                  return optn[1].matchedWords.length > 0;\n                }\n              );\n              const product = searchSuggestion.product ? searchSuggestion.product : '';\n              let content = '';\n              if (descriptions.length > 1) {\n                descriptions.sort((a, b) => {\n                  return a[1].value.length > b[1].value.length ? -1 : 1;\n                });\n                content =\n                  descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length\n                    ? descriptions[0][1]?.value\n                    : descriptions[1][1]?.value;\n              } else {\n                content = descriptions[0][1]?.value ? descriptions[0][1]?.value : '';\n              }\n\n              content = content.substring(0, 250);\n\n              return {\n                title,\n                to,\n                content,\n                product,\n              };\n            });\n\n            setSearchSuggestionResults(filteredResults);\n\n            if (!searchResults.length) {\n              setShowSearchResults(false);\n            }\n          } else {\n            setSearchSuggestionResults([]);\n          }\n          setIsLoading(false);\n        } else {\n          setSearchSuggestionResults([]);\n          setShowClear(false);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    return () => clearTimeout(timeOutId);\n  }, [searchQuery]);\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? '0' : 'var(--spectrum-global-dimension-size-800)'};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            // top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              width: calc(100vw - var(--spectrum-global-dimension-size-400));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async event => {\n              event.preventDefault();\n              skipSuggestions = true;\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async e => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n\n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n                  margin-top: var(--spectrum-global-dimension-size-40);\n\n                  &:focus {\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                width: calc(100vw - var(--spectrum-global-dimension-size-400));\n              }\n            `}>\n            {!isLoading && searchSuggestionResults.length > 0 && (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (\n                    suggestionsRef?.current &&\n                    suggestionsRef.current.contains(document.activeElement)\n                  ) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion, index, array) => {\n                  let productCategory;\n\n                  if (array[index - 1]) {\n                    const prevSuggestion = array[index - 1];\n                    if (prevSuggestion.product !== searchSuggestion.product) {\n                      productCategory = searchSuggestion.product;\n                    }\n                  } else {\n                    productCategory = searchSuggestion.product;\n                  }\n                  return (\n                    <>\n                      {productCategory && (\n                        <>\n                          <hr\n                            css={css`\n                              width: 95%;\n                              margin-top: 20px;\n                            `}></hr>\n                          <h4\n                            css={css`\n                              margin-left: 15px;\n                              color: SlateGray;\n                              margin-top: 5px;\n                              margin-bottom: 5px;\n                            `}>\n                            {productCategory}\n                          </h4>\n                          <hr\n                            css={css`\n                              width: 95%;\n                            `}></hr>\n                        </>\n                      )}\n                      <MenuItem\n                        key={searchSuggestion.objectID}\n                        href={searchSuggestion.to}\n                        target=\"_top\">\n                        <div\n                          css={css`\n                            mark,\n                            em {\n                              background-color: transparent;\n                              color: inherit;\n                              font-weight: inherit;\n                              font-style: inherit;\n                              text-decoration: underline;\n                            }\n                          `}>\n                          <strong\n                            dangerouslySetInnerHTML={{\n                              __html: encodeHTML(searchSuggestion.title),\n                            }}\n                          />\n\n                          <div\n                            css={css`\n                              font-style: italic;\n                              margin: var(--spectrum-global-dimension-size-50) 0;\n                            `}>\n                            {searchSuggestion.to}\n                          </div>\n\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: encodeHTML(searchSuggestion.content),\n                            }}\n                          />\n                        </div>\n                      </MenuItem>\n                    </>\n                  );\n                })}\n              </Menu>\n            )}\n            {isLoading && searchQuery.length > 0 && (\n              <div\n                css={css`\n                  width: 100%;\n                  height: 100%;\n                  display: grid;\n                  place-items: start center;\n                  margin: 10px 0;\n                `}>\n                <ProgressCircle size=\"L\" />\n              </div>\n            )}\n            {!isLoading && !searchSuggestionResults.length && (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && showSearchResults && (\n          <div\n            css={css`\n              width: 100%;\n              height: 100%;\n              display: grid;\n              place-items: start center;\n            `}>\n            <ProgressCircle size=\"L\" />\n          </div>\n        )}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                max-width: ${MOBILE_SCREEN_WIDTH};\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  overflow: auto;\n                  max-width: ${MOBILE_SCREEN_WIDTH};\n                  width: calc(100vw - var(--spectrum-global-dimension-size-400));\n                  flex-direction: row;\n                  align-content: space-around;\n                  flex-wrap: wrap;\n                  padding: 0 var(--spectrum-global-dimension-size-200);\n                  gap: var(--spectrum-global-dimension-size-200);\n                }\n              `}>\n              {mobileView && (\n                <div>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Filter by Products\n                  </h4>\n                  <PickerButton\n                    onClick={() => setOpenProductPicker(!openProductPicker)}\n                    isOpen={openProductPicker}>\n                    {productResults\n                      .filter(productName => productName !== SEARCH_INDEX_ALL)\n                      .map(productName => productName)\n                      .join(', ')}\n                  </PickerButton>\n\n                  <AlertDialog\n                    isOpen={openProductPicker}\n                    setIsOpen={setOpenProductPicker}\n                    title=\"Select Product\">\n                    <div\n                      css={css`\n                        display: flex;\n                        flex-direction: column;\n                        overflow-y: auto;\n                        overflow-x: hidden;\n                        max-height: 100%;\n                        width: 100%;\n                      `}>\n                      {productResults.map((productName, i) => {\n                        return (\n                          <Checkbox\n                            key={i}\n                            isSelected={\n                              productName === SEARCH_INDEX_ALL\n                                ? selectedIndex.includes('all')\n                                : selectedIndex.some(index => {\n                                    return getIndexesFromProduct(productName, indexAll).includes(\n                                      index\n                                    );\n                                  })\n                            }\n                            value={productName}\n                            onChange={checked => {\n                              if (!checked) {\n                                if (productName === 'All Products') {\n                                  setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                                } else {\n                                  setSelectedIndex(\n                                    selectedIndex.filter(\n                                      index =>\n                                        !getIndexesFromProduct(productName, indexAll).includes(\n                                          index\n                                        )\n                                    )\n                                  );\n                                }\n                              } else {\n                                if (productName === 'All Products') {\n                                  setSelectedIndex(['all']);\n                                } else {\n                                  setSelectedIndex([\n                                    ...selectedIndex.filter(index => index !== 'all'),\n                                    ...getIndexesFromProduct(productName, indexAll),\n                                  ]);\n                                }\n                              }\n                              setSelectedKeywords([]);\n                              setTriggerSearch(true);\n                            }}>\n                            <span>{productName}</span>\n                          </Checkbox>\n                        );\n                      })}\n                    </div>\n                  </AlertDialog>\n                </div>\n              )}\n\n              {!mobileView && (\n                <>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n\n                      @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        display: none;\n                      }\n                    `}>\n                    Filter by Products\n                  </h4>\n\n                  <div\n                    css={css`\n                      display: flex;\n                      flex-direction: column;\n                      overflow-y: auto;\n                      overflow-x: hidden;\n                      max-height: 30%;\n                      width: ${SIDENAV_WIDTH};\n                      @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        display: none;\n                        margin-bottom: 0;\n                      }\n                    `}>\n                    {productResults.map((productName, i) => {\n                      return (\n                        <Checkbox\n                          key={i}\n                          isSelected={\n                            productName === SEARCH_INDEX_ALL\n                              ? selectedIndex.includes('all')\n                              : selectedIndex.some(index => {\n                                  return getIndexesFromProduct(productName, indexAll).includes(\n                                    index\n                                  );\n                                })\n                          }\n                          value={productName}\n                          onChange={checked => {\n                            if (!checked) {\n                              if (productName === 'All Products') {\n                                setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                              } else {\n                                setSelectedIndex(\n                                  selectedIndex.filter(\n                                    index =>\n                                      !getIndexesFromProduct(productName, indexAll).includes(index)\n                                  )\n                                );\n                              }\n                            } else {\n                              if (productName === 'All Products') {\n                                setSelectedIndex(['all']);\n                              } else {\n                                setSelectedIndex([\n                                  ...selectedIndex.filter(index => index !== 'all'),\n                                  ...getIndexesFromProduct(productName, indexAll),\n                                ]);\n                              }\n                            }\n                            setSelectedKeywords([]);\n                            setTriggerSearch(true);\n                          }}>\n                          <span>{productName}</span>\n                        </Checkbox>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n\n              {mobileView && (\n                <div>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Filter by Keywords\n                  </h4>\n                  <PickerButton\n                    onClick={() => setOpenKeywordPicker(!openKeywordPicker)}\n                    isOpen={openKeywordPicker}\n                    css={css``}>\n                    {keywordResults.map(keywordResult => Object.keys(keywordResult)[0]).join(', ')}\n                  </PickerButton>\n\n                  <AlertDialog\n                    isOpen={openKeywordPicker}\n                    setIsOpen={setOpenKeywordPicker}\n                    title=\"Select Product\">\n                    <div\n                      css={css`\n                        display: flex;\n                        flex-direction: column;\n                        overflow-y: auto;\n                        overflow-x: hidden;\n                        max-height: 100%;\n                        width: 100%;\n                      `}>\n                      {keywordResults.length > 0 ? (\n                        keywordResults.map((keywordResult, i) => {\n                          const keyword = Object.keys(keywordResult)[0];\n\n                          return (\n                            <Checkbox\n                              key={i}\n                              isSelected={selectedKeywords.includes(keyword)}\n                              value={keyword}\n                              onChange={checked => {\n                                if (checked) {\n                                  setSelectedKeywords(selectedKeywords => [\n                                    ...selectedKeywords,\n                                    keyword,\n                                  ]);\n                                } else {\n                                  setSelectedKeywords(\n                                    selectedKeywords.filter(\n                                      selectedKeyword => selectedKeyword !== keyword\n                                    )\n                                  );\n                                }\n                                setTriggerSearch(true);\n                              }}>\n                              <span\n                                css={css`\n                                  white-space: nowrap;\n                                  text-overflow: ellipsis;\n                                `}>\n                                {keyword}\n                              </span>\n                              {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                              {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                            </Checkbox>\n                          );\n                        })\n                      ) : (\n                        <div className=\"spectrum-Body spectrum-Body--sizeS\">\n                          No filter options available\n                        </div>\n                      )}\n                    </div>\n                  </AlertDialog>\n                </div>\n              )}\n\n              {!mobileView && (\n                <>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-200);\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Filter by Keywords\n                  </h4>\n                  <div\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                      display: flex;\n                      flex-direction: column;\n                      overflow-y: auto;\n                      overflow-x: hidden;\n                      max-height: 50%;\n                      width: ${SIDENAV_WIDTH};\n                    `}>\n                    {keywordResults.length > 0 ? (\n                      keywordResults.map((keywordResult, i) => {\n                        const keyword = Object.keys(keywordResult)[0];\n\n                        return (\n                          <Checkbox\n                            key={i}\n                            isSelected={selectedKeywords.includes(keyword)}\n                            value={keyword}\n                            onChange={checked => {\n                              if (checked) {\n                                setSelectedKeywords(selectedKeywords => [\n                                  ...selectedKeywords,\n                                  keyword,\n                                ]);\n                              } else {\n                                setSelectedKeywords(\n                                  selectedKeywords.filter(\n                                    selectedKeyword => selectedKeyword !== keyword\n                                  )\n                                );\n                              }\n                              setTriggerSearch(true);\n                            }}>\n                            <span\n                              css={css`\n                                white-space: nowrap;\n                                text-overflow: ellipsis;\n                              `}>\n                              {keyword}\n                            </span>\n                            {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                            {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                          </Checkbox>\n                        );\n                      })\n                    ) : (\n                      <div className=\"spectrum-Body spectrum-Body--sizeS\">\n                        No filter options available\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n            <div\n              css={css`\n                height: 100%;\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  width: 100%;\n                }\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map(searchResult => {\n                    const to = `${window.location.origin}${searchResult.url}${searchResult.fragment || ''}`;\n                    const title = searchResult._highlightResult.title?.value\n                      ? searchResult._highlightResult.title.value\n                      : '';\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(\n                      optn => optn[1].matchedWords.length > 0\n                    );\n                    let content = '';\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content =\n                        descriptions[0]?.[1]?.value?.length > descriptions[1]?.[1]?.value?.length\n                          ? descriptions[0]?.[1]?.value\n                          : descriptions[1]?.[1]?.value;\n                    } else {\n                      content = descriptions[0]?.[1]?.value ? descriptions[0]?.[1]?.value : '';\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                            overflow: hidden;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to} target=\"_top\">\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title),\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to} target=\"_top\">\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                            overflow-wrap: break-word;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {!showSearchResults && (\n        <div\n          css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed\n              ? 'var(--spectrum-global-dimension-size-800)'\n              : 'calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))'};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n        />\n      )}\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string,\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","getIndexesFromProduct","localProduct","indexAll","filter","product","productName","map","_ref26","productIndices","flat","_ref27","indexName","searchIndexes","async","algolia","query","indexPrefix","selectedIndex","existingIndices","setExistingIndices","keywords","indexes","length","algoliaIndices","listIndices","algoliaIndexNames","Object","values","items","_ref30","filteredIndexes","prod","_ref31","localIndex","includes","selected","queries","forEach","push","facets","attributesToRetrieve","hitsPerPage","Math","ceil","filters","keyword","join","multipleQueries","mapSearchResults","hits","results","_ref32","objectID","url","path","description","title","_highlightResult","fragment","urlPath","isExternalLink","find","result","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","Search","_ref33","showSearch","setShowSearch","searchButtonId","isIFramed","isLoading","setIsLoading","useState","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","searchIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","openProductPicker","setOpenProductPicker","openKeywordPicker","setOpenKeywordPicker","mobileView","setMobileView","skipSuggestions","_search","_search$results","SEARCH_PARAMS","index","message","JSON","stringify","targetOrigin","setTargetOrigin","parentURL","document","referrer","indexOf","parent","postMessage","mappedProductResults","mappedSearchResults","mappedKeywordResults","_ref34","splice","console","log","useEffect","addEventListener","e","data","parse","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","concat","_toConsumableArray","reply","received","_ref35","_ref36","innerWidth","parseInt","MOBILE_SCREEN_WIDTH","searchParams","URL","get","split","current","focus","scrollTop","onClick","_ref37","target","contains","id","removeEventListener","onEscape","_ref38","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","_suggestions$results","suggestions","_ref28","_ref29","searchProductNames","localProductIndexes","searchSuggestions","_ref39","filteredResults","searchSuggestion","_searchSuggestion$_hi","to","origin","descriptions","entries","optn","matchedWords","content","_descriptions$0$","_descriptions$0$$valu","_descriptions$1$","_descriptions$1$$valu","_descriptions$0$2","_descriptions$1$2","_descriptions$0$3","_descriptions$0$4","sort","a","b","substring","clearTimeout","___EmotionJSX","React","ref","css","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","_ref40","querySelector","onChange","type","placeholder","autoComplete","ActionButton","tabIndex","isQuiet","Close","Popover","isOpen","Menu","_ref41","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","array","productCategory","MenuItem","href","dangerouslySetInnerHTML","__html","ProgressCircle","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","PickerButton","AlertDialog","setIsOpen","Checkbox","isSelected","checked","keywordResult","keys","selectedKeyword","searchResult","_searchResult$_highli","_descriptions$","_descriptions$$","_descriptions$$$value","_descriptions$2","_descriptions$2$","_descriptions$2$$valu","_descriptions$3","_descriptions$3$","_descriptions$4","_descriptions$4$","_descriptions$5","_descriptions$5$","_descriptions$6","_descriptions$6$","AnchorLink","variant","xmlns","viewBox","d"],"sourceRoot":""}