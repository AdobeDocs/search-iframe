{"version":3,"file":"dev-site-assets/79d4506a16328b222421.js","mappings":"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","sources":["webpack://search-iframe/./src/@adobe/gatsby-theme-aio/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '@adobe/gatsby-theme-aio/src/components/AnchorLink';\nimport { Item as MenuItem, Menu } from '@adobe/gatsby-theme-aio/src/components/Menu';\nimport { Popover } from '@adobe/gatsby-theme-aio/src/components/Popover';\nimport PropTypes from 'prop-types';\nimport {\n  MOBILE_SCREEN_WIDTH,\n  DESKTOP_SCREEN_WIDTH,\n  SIDENAV_WIDTH,\n  SEARCH_PARAMS,\n  isExternalLink,\n} from '@adobe/gatsby-theme-aio/src/utils';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '@adobe/gatsby-theme-aio/src/components/ActionButton';\nimport { Close, Magnify } from '@adobe/gatsby-theme-aio/src/components/Icons';\nimport { Checkbox } from '@adobe/gatsby-theme-aio/src/components/Checkbox';\nimport { ProgressCircle } from '@adobe/gatsby-theme-aio/src/components/ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = html =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, i => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst getIndexesFromProduct = (localProduct, indexAll) => {\n  const product = indexAll.filter(product => product.productName === localProduct);\n  const indices = product\n    .map(({ productIndices }) => productIndices)\n    .flat()\n    .map(({ indexName }) => indexName);\n  return indices;\n};\n\nconst searchSuggestions = async (\n  algolia,\n  query,\n  indexPrefix,\n  searchIndex,\n  indexAll,\n  existingIndices,\n  setExistingIndices\n) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter(product => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0], indexAll);\n    searchIndex = [\n      ...localProductIndexes,\n      ...indexes.filter(index => !searchProductNames.includes(index)),\n    ].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach(indexName => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'product', 'title', 'description'],\n      },\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (\n  algolia,\n  query,\n  indexPrefix,\n  selectedIndex,\n  indexAll,\n  existingIndices,\n  setExistingIndices,\n  keywords\n) => {\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach(indexName => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map(keyword => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND '),\n      },\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, product, description, title, _highlightResult }) => {\n    let urlPath = '';\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find(result => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          product,\n          description,\n          title,\n          _highlightResult,\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach(keyword => {\n      const found = results.find(result => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (\n    parentURL.indexOf('localhost') >= 0 ||\n    parentURL.indexOf('developer-stage.adobe') >= 0 ||\n    parentURL.indexOf('hlx.page') >= 0 ||\n    parentURL.indexOf('hlx.live') >= 0 ||\n    parentURL.indexOf('developer.adobe') >= 0\n  ) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({\n  algolia,\n  indexAll,\n  indexPrefix,\n  showSearch,\n  setShowSearch,\n  searchButtonId,\n  isIFramed,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      const message = JSON.stringify({\n        query: searchQuery,\n        keywords: selectedKeywords,\n        index: selectedIndex,\n      });\n      const targetOrigin = setTargetOrigin();\n      if (targetOrigin) {\n        window.parent.postMessage(message, targetOrigin);\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(\n          algolia,\n          searchQuery,\n          indexPrefix,\n          ['all'],\n          indexAll,\n          existingIndices,\n          setExistingIndices,\n          selectedKeywords\n        );\n      } else {\n        search = await searchIndexes(\n          algolia,\n          searchQuery,\n          indexPrefix,\n          selectedIndex,\n          indexAll,\n          existingIndices,\n          setExistingIndices,\n          selectedKeywords\n        );\n      }\n\n      const localProduct = searchIndex.filter(product => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct, indexAll));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    window.addEventListener('message', e => {\n      const message = JSON.parse(e.data);\n      if (message.localPathName) {\n        let localPathName = message.localPathName;\n        if (localPathName !== '/') {\n          // make sure path name has a slash at start/end to match path-prefix format\n          if (!localPathName.startsWith('/')) {\n            localPathName = `/${localPathName}`;\n          }\n          if (!localPathName.endsWith('/')) {\n            localPathName = `${localPathName}/`;\n          }\n          const localProduct = indexAll.find(product =>\n            product.productIndices.some(idx => {\n              return localPathName.startsWith(idx.indexPathPrefix);\n            })\n          );\n\n          if (localProduct?.productName) {\n            setSearchIndex([localProduct.productName, ...searchIndex]);\n          }\n        }\n\n        const reply = JSON.stringify({ received: message.localPathName });\n        window.parent.postMessage(reply, '*');\n      }\n    });\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name);\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll\n      .map(prod => prod.productIndices)\n      .flat()\n      .map(({ indexName }) => {\n        return indexPrefix ? `${indexPrefix}-${indexName}` : indexName;\n      });\n\n    const filteredIndexes = localIndexList.filter(localIndex =>\n      algoliaIndexNames.includes(localIndex)\n    );\n    setExistingIndices(filteredIndexes);\n  }, []);\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (\n        searchRef.current &&\n        !searchRef.current.contains(target) &&\n        target.id !== searchButtonId\n      ) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        const searchClose = document.getElementById('aio-Search-close');\n        if (searchClose) searchClose.focus();\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n      if (searchQuery.length && !searchResults.length) {\n        setShowClear(true);\n\n        const suggestions = await searchSuggestions(\n          algolia,\n          searchQuery,\n          indexPrefix,\n          searchIndex,\n          indexAll,\n          existingIndices,\n          setExistingIndices\n        );\n        setSearchQueryCounter(searchQueryCounter + 1);\n        console.log('Total search queries counted is:', searchQueryCounter);\n\n        if (suggestions?.results?.length) {\n          const results = [];\n          suggestions.results.forEach(({ hits }) => {\n            mapSearchResults(hits, results);\n          });\n          const filteredResults = results.map((searchSuggestion, index, results) => {\n            const to = `${window.location.origin}${searchSuggestion.url}`;\n            const title = searchSuggestion._highlightResult.title?.value\n              ? searchSuggestion._highlightResult.title.value\n              : '';\n            const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n              return optn[1].matchedWords.length > 0;\n            });\n            const product = searchSuggestion.product ? searchSuggestion.product : '';\n            let content = '';\n            if (descriptions.length > 1) {\n              descriptions.sort((a, b) => {\n                return a[1].value.length > b[1].value.length ? -1 : 1;\n              });\n              content =\n                descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length\n                  ? descriptions[0][1]?.value\n                  : descriptions[1][1]?.value;\n            } else {\n              content = descriptions[0][1]?.value ? descriptions[0][1]?.value : '';\n            }\n\n            content = content.substring(0, 250);\n\n            return {\n              title,\n              to,\n              content,\n              product,\n            };\n          });\n\n          setSearchSuggestionResults(filteredResults);\n\n          if (!searchResults.length) {\n            setShowSearchResults(false);\n          }\n        } else {\n          setSearchSuggestionResults([]);\n        }\n\n        setIsSuggestionsOpen(true);\n      } else {\n        setShowClear(false);\n        setIsSuggestionsOpen(false);\n      }\n    };\n\n    return () => clearTimeout(timeOutId);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (suggestionsRef) {\n      if (searchSuggestionResults.length > 0) {\n        const allLinks = suggestionsRef.current.querySelectorAll('a');\n        if (allLinks.length > 0) {\n          allLinks.forEach(link => {\n            link.target = '_top';\n          });\n        }\n      }\n    }\n\n    if (searchResultsRef) {\n      if (searchResults.length > 0) {\n        const allLinks = searchResultsRef.current.querySelectorAll('a');\n        if (allLinks.length > 0) {\n          allLinks.forEach(link => {\n            link.target = '_top';\n          });\n        }\n      }\n    }\n  }, [searchSuggestionResults, searchResults]);\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? '0' : 'var(--spectrum-global-dimension-size-800)'};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async event => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async e => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n\n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                  &:focus {\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (\n                    suggestionsRef?.current &&\n                    suggestionsRef.current.contains(document.activeElement)\n                  ) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion, index, array) => {\n                  let productCategory;\n\n                  if (array[index - 1]) {\n                    const prevSuggestion = array[index - 1];\n                    if (prevSuggestion.product !== searchSuggestion.product) {\n                      productCategory = searchSuggestion.product;\n                    }\n                  } else {\n                    productCategory = searchSuggestion.product;\n                  }\n\n                  return (\n                    <>\n                      {productCategory && (\n                        <>\n                          <hr\n                            css={css`\n                              width: 95%;\n                              margin-top: 20px;\n                            `}></hr>\n                          <h4\n                            css={css`\n                              margin-left: 15px;\n                              color: SlateGray;\n                              margin-top: 5px;\n                              margin-bottom: 5px;\n                            `}>\n                            {productCategory}\n                          </h4>\n                          <hr\n                            css={css`\n                              width: 95%;\n                            `}></hr>\n                        </>\n                      )}\n                      <MenuItem key={searchSuggestion.objectID} href={searchSuggestion.to}>\n                        <div\n                          css={css`\n                            mark,\n                            em {\n                              background-color: transparent;\n                              color: inherit;\n                              font-weight: inherit;\n                              font-style: inherit;\n                              text-decoration: underline;\n                            }\n                          `}>\n                          <strong\n                            dangerouslySetInnerHTML={{\n                              __html: encodeHTML(searchSuggestion.title),\n                            }}\n                          />\n\n                          <div\n                            css={css`\n                              font-style: italic;\n                              margin: var(--spectrum-global-dimension-size-50) 0;\n                            `}>\n                            {searchSuggestion.to}\n                          </div>\n\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: encodeHTML(searchSuggestion.content),\n                            }}\n                          />\n                        </div>\n                      </MenuItem>\n                    </>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (\n          <div\n            css={css`\n              width: 100%;\n              height: 100%;\n              display: grid;\n              place-items: start center;\n            `}>\n            <ProgressCircle size=\"L\" />\n          </div>\n        )}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  overflow-y: auto;\n                  overflow-x: hidden;\n                  max-height: 30%;\n                  width: ${SIDENAV_WIDTH};\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-bottom: 0;\n                  }\n                `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={\n                        productName === SEARCH_INDEX_ALL\n                          ? selectedIndex.includes('all')\n                          : selectedIndex.some(index => {\n                              return getIndexesFromProduct(productName, indexAll).includes(index);\n                            })\n                      }\n                      value={productName}\n                      onChange={checked => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(\n                              selectedIndex.filter(\n                                index =>\n                                  !getIndexesFromProduct(productName, indexAll).includes(index)\n                              )\n                            );\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([\n                              ...selectedIndex.filter(index => index !== 'all'),\n                              ...getIndexesFromProduct(productName, indexAll),\n                            ]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                  overflow-y: auto;\n                  overflow-x: hidden;\n                  max-height: 50%;\n                  width: ${SIDENAV_WIDTH};\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-bottom: 0;\n                  }\n                `}>\n                {keywordResults.length > 0 ? (\n                  keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={checked => {\n                          if (checked) {\n                            setSelectedKeywords(selectedKeywords => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter(\n                                selectedKeyword => selectedKeyword !== keyword\n                              )\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                            white-space: nowrap;\n                            text-overflow: ellipsis;\n                          `}>\n                          {keyword}\n                        </span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  })\n                ) : (\n                  <div className=\"spectrum-Body spectrum-Body--sizeS\">\n                    No filter options available\n                  </div>\n                )}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map(searchResult => {\n                    const to = `${window.location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value\n                      ? searchResult._highlightResult.title.value\n                      : '';\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(\n                      optn => optn[1].matchedWords.length > 0\n                    );\n                    let content = '';\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content =\n                        descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length\n                          ? descriptions[0][1]?.value\n                          : descriptions[1][1]?.value;\n                    } else {\n                      content = descriptions[0][1]?.value ? descriptions[0][1]?.value : '';\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title),\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {!showSearchResults && (\n        <div\n          css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed\n              ? 'var(--spectrum-global-dimension-size-800)'\n              : 'calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))'};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n        />\n      )}\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string,\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","getIndexesFromProduct","localProduct","indexAll","filter","product","productName","map","productIndices","flat","indexName","searchSuggestions","algolia","query","indexPrefix","searchIndex","existingIndices","setExistingIndices","queries","length","listIndices","algoliaIndices","algoliaIndexNames","Object","values","items","localIndexList","prod","filteredIndexes","localIndex","includes","indexes","searchProductNames","localProductIndexes","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","selected","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","path","description","title","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","isLoading","setIsLoading","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","indexOf","parent","postMessage","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","useEffect","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","reply","received","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","removeEventListener","onEscape","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","suggestions","console","log","filteredResults","searchSuggestion","to","origin","descriptions","entries","optn","matchedWords","content","sort","a","b","substring","clearTimeout","allLinks","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","array","productCategory","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","isSelected","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}